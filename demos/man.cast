{"version": 2, "width": 96, "height": 28, "timestamp": 1570685957, "env": {"SHELL": "/bin/bash", "TERM": "screen"}}
[0.038833, "o", "\u001bkroot@localhost:~\u001b\\[root@localhost ~]# "]
[2.948687, "o", "m"]
[3.042454, "o", "a"]
[3.48783, "o", "n"]
[3.802167, "o", " "]
[7.240621, "o", "s"]
[7.353374, "o", "y"]
[7.461888, "o", "s"]
[7.974968, "o", "c"]
[8.112714, "o", "a"]
[8.220765, "o", "l"]
[8.419391, "o", "l"]
[8.45942, "o", "s"]
[9.415006, "o", "\r\n"]
[9.462849, "o", "\u001b[?1049h\u001b[?1h\u001b=\r"]
[9.505484, "o", "SYSCALLS(2)                       Linux Programmer's Manual                       SYSCALLS(2)\u001b[m\r\n\u001b[m\r\n\u001b[1mNAME\u001b[0m\u001b[m\r\n       syscalls - Linux system calls\u001b[m\r\n\u001b[m\r\n\u001b[1mSYNOPSIS\u001b[0m\u001b[m\r\n       Linux system calls.\u001b[m\r\n\u001b[m\r\n\u001b[1mDESCRIPTION\u001b[0m\u001b[m\r\n       The system call is the fundamental interface between an application and the Linux ker‐\u001b[m\r\n       nel.\u001b[m\r\n\u001b[m\r\n   \u001b[1mSystem\u001b[0m \u001b[1mcalls\u001b[0m \u001b[1mand\u001b[0m \u001b[1mlibrary\u001b[0m \u001b[1mwrapper\u001b[0m \u001b[1mfunctions\u001b[0m\u001b[m\r\n       System calls are generally not invoked directly, but rather via wrapper  functions  in\u001b[m\r\n       glibc  (or  perhaps some other library).  For details of direct invocation of a system\u001b[m\r\n       call, see \u001b[1mintro\u001b[0m(2).  Often, but not always, the name of the wrapper  function  is  the\u001b[m\r\n       same  as  the  name of the system call that it invokes.  For example, glibc contains a\u001b[m\r\n       function \u001b[1mtruncate\u001b[0m() which invokes the underlying \"truncate\" system call.\u001b[m\r\n\u001b[m\r\n       Often the glibc wrapper function is quite thin, doing "]
[9.505542, "o", "little work other  than  copying\u001b[m\r\n       arguments  to  the  right  registers before invoking the system call, and then setting\u001b[m\r\n       \u001b[4merrno\u001b[24m appropriately after the system call has returned.  (These  are  the  same  steps\u001b[m\r\n       that  are  performed by \u001b[1msyscall\u001b[0m(2), which can be used to invoke system calls for which\u001b[m\r\n       no wrapper function is provided.)  Note: system calls indicate a failure by  returning\u001b[m\r\n       a negative error number to the caller; when this happens, the wrapper function negates\u001b[m\r\n       the returned error number (to make it positive), copies it to \u001b[4merrno\u001b[24m, and returns -1 to\u001b[m\r\n       the caller of the wrapper.\u001b[m\r\n\u001b[3m Manual page syscalls(2) line 1 (press h for help or q to quit)\u001b[23m\u001b[K"]
[16.849863, "o", "\r\u001b[K/"]
[17.645831, "o", "\u001b[KS\bS"]
[18.01396, "o", "\u001b[KE\bE"]
[18.317247, "o", "\u001b[KE\bE"]
[18.848719, "o", "\r\u001b[K\u001b[1;1HSYSCALLS(2)                       Linux Programmer's Manual                       SYSCALLS(2)\u001b[m\r\n\u001b[2;1H\u001b[m\r\n\u001b[3;1H\u001b[1mNAME\u001b[0m\u001b[m\r\n\u001b[4;1H       syscalls - Linux system calls\u001b[m\r\n\u001b[5;1H\u001b[m\r\n\u001b[6;1H\u001b[1mSYNOPSIS\u001b[0m\u001b[m\r\n\u001b[7;1H       Linux system calls.\u001b[m\r\n\u001b[8;1H\u001b[m\r\n\u001b[9;1H\u001b[1mDESCRIPTION\u001b[0m\u001b[m\r\n\u001b[10;1H       The system call is the fundamental interface between an application and the Linux ker‐\u001b[m\r\n\u001b[11;1H       nel.\u001b[m\r\n\u001b[12;1H\u001b[m\r\n\u001b[13;1H   \u001b[1mSystem\u001b[0m \u001b[1mcalls\u001b[0m \u001b[1mand\u001b[0m \u001b[1mlibrary\u001b[0m \u001b[1mwrapper\u001b[0m \u001b[1mfunctions\u001b[0m\u001b[m\r\n\u001b[14;1H       System calls are generally not invoked directly, but rather via wrapper  functions  in\u001b[m\r\n\u001b[15;1H       glibc  (or  perhaps some other library).  For details of direct invocation of a system\u001b[m\r\n\u001b[16;1H       call, see \u001b[1mintro\u001b[0m(2).  Often, but not always, the name of the wrapper  function  is  the\u001b[m\r\n\u001b[17;1H       same  as  the  name of the system call that it invokes.  For example, glibc contains a\u001b[m\r\n\u001b[18;1H       function \u001b[1mtruncate\u001b[0m() wh"]
[18.849038, "o", "ich invokes the underlying \"truncate\" system call.\u001b[m\r\n\u001b[19;1H\u001b[m\r\n\u001b[20;1H       Often the glibc wrapper function is quite thin, doing little work other  than  copying\u001b[m\r\n\u001b[21;1H       arguments  to  the  right  registers before invoking the system call, and then setting\u001b[m\r\n\u001b[22;1H       \u001b[4merrno\u001b[24m appropriately after the system call has returned.  (These  are  the  same  steps\u001b[m\r\n\u001b[23;1H       that  are  performed by \u001b[1msyscall\u001b[0m(2), which can be used to invoke system calls for which\u001b[m\r\n\u001b[24;1H       no wrapper function is provided.)  Note: system calls indicate a failure by  returning\u001b[m\r\n\u001b[25;1H       a negative error number to the caller; when this happens, the wrapper function negates\u001b[m\r\n\u001b[26;1H       the returned error number (to make it positive), copies it to \u001b[4merrno\u001b[24m, and returns -1 to\u001b[m\r\n\u001b[27;1H       the caller of the wrapper.\u001b[m\r\n\u001b[28;1H\u001b[1;1HSYSCALLS(2)                       Linux Programmer's Manual                       SYSCALLS(2)\u001b[m\r\n\u001b[2;1H\u001b[m\r\n\u001b[3;1H\u001b[1mNAME\u001b[0m\u001b[m\r\n\u001b[4;1H"]
[18.849069, "o", "       syscalls - Linux system calls\u001b[m\r\n\u001b[5;1H\u001b[m\r\n\u001b[6;1H\u001b[1mSYNOPSIS\u001b[0m\u001b[m\r\n\u001b[7;1H       Linux system calls.\u001b[m\r\n\u001b[8;1H\u001b[m\r\n\u001b[9;1H\u001b[1mDESCRIPTION\u001b[0m\u001b[m\r\n\u001b[10;1H       The system call is the fundamental interface between an application and the Linux ker‐\u001b[m\r\n\u001b[11;1H       nel.\u001b[m\r\n\u001b[12;1H\u001b[m\r\n\u001b[13;1H   \u001b[1mSystem\u001b[0m \u001b[1mcalls\u001b[0m \u001b[1mand\u001b[0m \u001b[1mlibrary\u001b[0m \u001b[1mwrapper\u001b[0m \u001b[1mfunctions\u001b[0m\u001b[m\r\n\u001b[14;1H       System calls are generally not invoked directly, but rather via wrapper  functions  in\u001b[m\r\n\u001b[15;1H       glibc  (or  perhaps some other library).  For details of direct invocation of a system\u001b[m\r\n\u001b[16;1H       call, see \u001b[1mintro\u001b[0m(2).  Often, but not always, the name of the wrapper  function  is  the\u001b[m\r\n\u001b[17;1H       same  as  the  name of the system call that it invokes.  For example, glibc contains a\u001b[m\r\n\u001b[18;1H       function \u001b[1mtruncate\u001b[0m() which invokes the underlying \"truncate\" system call.\u001b[m\r\n\u001b[19;1H\u001b[m\r\n\u001b[20;1H       Often the glibc wrapper function is quite thin, doing little work o"]
[18.849084, "o", "ther  than  copying\u001b[m\r\n\u001b[21;1H       arguments  to  the  right  registers before invoking the system call, and then setting\u001b[m\r\n\u001b[22;1H       \u001b[4merrno\u001b[24m appropriately after the system call has returned.  (These  are  the  same  steps\u001b[m\r\n\u001b[23;1H       that  are  performed by \u001b[1msyscall\u001b[0m(2), which can be used to invoke system calls for which\u001b[m\r\n\u001b[24;1H       no wrapper function is provided.)  Note: system calls indicate a failure by  returning\u001b[m\r\n\u001b[25;1H       a negative error number to the caller; when this happens, the wrapper function negates\u001b[m\r\n\u001b[26;1H       the returned error number (to make it positive), copies it to \u001b[4merrno\u001b[24m, and returns -1 to\u001b[m\r\n\u001b[27;1H       the caller of the wrapper.\u001b[m\r\n\u001b[28;1H...skipping...\r\n\u001b[1m\u001b[3mSEE\u001b[23m\u001b[0m \u001b[1mALSO\u001b[0m\u001b[m\r\n       \u001b[1msyscall\u001b[0m(2), \u001b[1munimplemented\u001b[0m(2), \u001b[1mlibc\u001b[0m(7)\u001b[m\r\n\u001b[m\r\n\u001b[1mCOLOPHON\u001b[0m\u001b[m\r\n       This page is part of release 3.53 of the Linux \u001b[4mman-pages\u001b[24m project.   A  description  of\u001b[m\r\n       the   project,   and   in"]
[18.849097, "o", "formation   about   reporting   bugs,   can   be   found   at\u001b[m\r\n       http://www.kernel.org/doc/man-pages/.\u001b[m\r\n\u001b[m\r\nLinux                                     2013-04-17                              SYSCALLS(2)\u001b[m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[3m Manual page syscalls(2) line 569/579 (END) (press h for help or q to quit)\u001b[23m\u001b[K"]
[23.343216, "o", "\r\u001b[K\u001b[?1l\u001b>\u001b[?1049l\u001bkroot@localhost:~\u001b\\[root@localhost ~]# "]
[23.944403, "o", "m"]
[24.096687, "o", "a"]
[24.205781, "o", "n"]
[24.438808, "o", " "]
[24.675075, "o", "l"]
[24.763775, "o", "i"]
[24.872208, "o", "b"]
[25.301919, "o", "c"]
[25.828188, "o", "\r\n"]
[25.858524, "o", "\u001b[?1049h\u001b[?1h\u001b=\r"]
[25.888334, "o", "LIBC(7)                           Linux Programmer's Manual                           LIBC(7)\u001b[m\r\n\u001b[m\r\n\u001b[1mNAME\u001b[0m\u001b[m\r\n       libc - overview of standard C libraries on Linux\u001b[m\r\n\u001b[m\r\n\u001b[1mDESCRIPTION\u001b[0m\u001b[m\r\n       The  term  \"libc\"  is  commonly  used  as  a shorthand for the \"standard C library\", a\u001b[m\r\n       library of standard functions that can be used by all C  programs  (and  sometimes  by\u001b[m\r\n       programs  in  other  languages).  Because of some history (see below), use of the term\u001b[m\r\n       \"libc\" to refer to the standard C library is somewhat ambiguous on Linux.\u001b[m\r\n\u001b[m\r\n   \u001b[1mglibc\u001b[0m\u001b[m\r\n       By  far  the  most  widely  used  C  library  on  Linux   is   the   GNU   C   Library\u001b[m\r\n       ⟨http://www.gnu.org/software/libc/⟩,  often  referred  to  as  \u001b[4mglibc\u001b[24m.   This  is the C\u001b[m\r\n       library that is nowadays used in all major Linux distributions.   It  is  also  the  C\u001b[m\r\n       library  whose  details  are documented in the relevant pages of the \u001b[4mman-pages\u001b[24m project\u001b"]
[25.888447, "o", "[m\r\n       (primarily in Section 3 of the manual).  Documentation of glibc is also  available  in\u001b[m\r\n       the  glibc manual, available via the command \u001b[4minfo\u001b[24m \u001b[4mlibc\u001b[24m.  Release 1.0 of glibc was made\u001b[m\r\n       in September 1992.  (There were earlier 0.x releases.)   The  next  major  release  of\u001b[m\r\n       glibc was 2.0, at the beginning of 1997.\u001b[m\r\n\u001b[m\r\n       The  pathname  \u001b[4m/lib/libc.so.6\u001b[24m  (or something similar) is normally a symbolic link that\u001b[m\r\n       points to the location of the glibc library, and executing this  pathname  will  cause\u001b[m\r\n       glibc to display various information about the version installed on your system.\u001b[m\r\n\u001b[m\r\n   \u001b[1mLinux\u001b[0m \u001b[1mlibc\u001b[0m\u001b[m\r\n       In  the early to mid 1990s, there was for a while \u001b[4mLinux\u001b[24m \u001b[4mlibc\u001b[24m, a fork of glibc 1.x cre‐\u001b[m\r\n\u001b[3m Manual page libc(7) line 1 (press h for help or q to quit)\u001b[23m\u001b[K"]
[31.130855, "o", "\r\u001b[K/"]
[31.684686, "o", "\u001b[KS\bS"]
[31.926583, "o", "\u001b[KE\bE"]
[32.106389, "o", "\u001b[KE\bE"]
[32.731011, "o", "\r\u001b[K\u001b[1;1HLIBC(7)                           Linux Programmer's Manual                           LIBC(7)\u001b[m\r\n\u001b[2;1H\u001b[m\r\n\u001b[3;1H\u001b[1mNAME\u001b[0m\u001b[m\r\n\u001b[4;1H       libc - overview of standard C libraries on Linux\u001b[m\r\n\u001b[5;1H\u001b[m\r\n\u001b[6;1H\u001b[1mDESCRIPTION\u001b[0m\u001b[m\r\n\u001b[7;1H       The  term  \"libc\"  is  commonly  used  as  a shorthand for the \"standard C library\", a\u001b[m\r\n\u001b[8;1H       library of standard functions that can be used by all C  programs  (and  sometimes  by\u001b[m\r\n\u001b[9;1H       programs  in  other  languages).  Because of some history (see below), use of the term\u001b[m\r\n\u001b[10;1H       \"libc\" to refer to the standard C library is somewhat ambiguous on Linux.\u001b[m\r\n\u001b[11;1H\u001b[m\r\n\u001b[12;1H   \u001b[1mglibc\u001b[0m\u001b[m\r\n\u001b[13;1H       By  far  the  most  widely  used  C  library  on  Linux   is   the   GNU   C   Library\u001b[m\r\n\u001b[14;1H       ⟨http://www.gnu.org/software/libc/⟩,  often  referred  to  as  \u001b[4mglibc\u001b[24m.   This  is the C\u001b[m\r\n\u001b[15;1H       library that is nowadays used in all major Linux distributions.   It  is  also  the  C\u001b[m\r\n\u001b[1"]
[32.731853, "o", "6;1H       library  whose  details  are documented in the relevant pages of the \u001b[4mman-pages\u001b[24m project\u001b[m\r\n\u001b[17;1H       (primarily in Section 3 of the manual).  Documentation of glibc is also  available  in\u001b[m\r\n\u001b[18;1H       the  glibc manual, available via the command \u001b[4minfo\u001b[24m \u001b[4mlibc\u001b[24m.  Release 1.0 of glibc was made\u001b[m\r\n\u001b[19;1H       in September 1992.  (There were earlier 0.x releases.)   The  next  major  release  of\u001b[m\r\n\u001b[20;1H       glibc was 2.0, at the beginning of 1997.\u001b[m\r\n\u001b[21;1H\u001b[m\r\n\u001b[22;1H       The  pathname  \u001b[4m/lib/libc.so.6\u001b[24m  (or something similar) is normally a symbolic link that\u001b[m\r\n\u001b[23;1H       points to the location of the glibc library, and executing this  pathname  will  cause\u001b[m\r\n\u001b[24;1H       glibc to display various information about the version installed on your system.\u001b[m\r\n\u001b[25;1H\u001b[m\r\n\u001b[26;1H   \u001b[1mLinux\u001b[0m \u001b[1mlibc\u001b[0m\u001b[m\r\n\u001b[27;1H       In  the early to mid 1990s, there was for a while \u001b[4mLinux\u001b[24m \u001b[4mlibc\u001b[24m, a fork of glibc 1.x cre‐\u001b[m\r\n\u001b[28;1H\u001b[1;1H"]
[32.731952, "o", "LIBC(7)                           Linux Programmer's Manual                           LIBC(7)\u001b[m\r\n\u001b[2;1H\u001b[m\r\n\u001b[3;1H\u001b[1mNAME\u001b[0m\u001b[m\r\n\u001b[4;1H       libc - overview of standard C libraries on Linux\u001b[m\r\n\u001b[5;1H\u001b[m\r\n\u001b[6;1H\u001b[1mDESCRIPTION\u001b[0m\u001b[m\r\n\u001b[7;1H       The  term  \"libc\"  is  commonly  used  as  a shorthand for the \"standard C library\", a\u001b[m\r\n\u001b[8;1H       library of standard functions that can be used by all C  programs  (and  sometimes  by\u001b[m\r\n\u001b[9;1H       programs  in  other  languages).  Because of some history (see below), use of the term\u001b[m\r\n\u001b[10;1H       \"libc\" to refer to the standard C library is somewhat ambiguous on Linux.\u001b[m\r\n\u001b[11;1H\u001b[m\r\n\u001b[12;1H   \u001b[1mglibc\u001b[0m\u001b[m\r\n\u001b[13;1H       By  far  the  most  widely  used  C  library  on  Linux   is   the   GNU   C   Library\u001b[m\r\n\u001b[14;1H       ⟨http://www.gnu.org/software/libc/⟩,  often  referred  to  as  \u001b[4mglibc\u001b[24m.   This  is the C\u001b[m\r\n\u001b[15;1H       library that is nowadays used in all major Linux distributions.   It  is  also  the  C\u001b[m\r\n\u001b[16;1H      "]
[32.731997, "o", " library  whose  details  are documented in the relevant pages of the \u001b[4mman-pages\u001b[24m project\u001b[m\r\n\u001b[17;1H       (primarily in Section 3 of the manual).  Documentation of glibc is also  available  in\u001b[m\r\n\u001b[18;1H       the  glibc manual, available via the command \u001b[4minfo\u001b[24m \u001b[4mlibc\u001b[24m.  Release 1.0 of glibc was made\u001b[m\r\n\u001b[19;1H       in September 1992.  (There were earlier 0.x releases.)   The  next  major  release  of\u001b[m\r\n\u001b[20;1H       glibc was 2.0, at the beginning of 1997.\u001b[m\r\n\u001b[21;1H\u001b[m\r\n\u001b[22;1H       The  pathname  \u001b[4m/lib/libc.so.6\u001b[24m  (or something similar) is normally a symbolic link that\u001b[m\r\n\u001b[23;1H       points to the location of the glibc library, and executing this  pathname  will  cause\u001b[m\r\n\u001b[24;1H       glibc to display various information about the version installed on your system.\u001b[m\r\n\u001b[25;1H\u001b[m\r\n\u001b[26;1H   \u001b[1mLinux\u001b[0m \u001b[1mlibc\u001b[0m\u001b[m\r\n\u001b[27;1H       In  the early to mid 1990s, there was for a while \u001b[4mLinux\u001b[24m \u001b[4mlibc\u001b[24m, a fork of glibc 1.x cre‐\u001b[m\r\n\u001b[28;1H...skipping...\r\n"]
[32.732038, "o", "\u001b[1m\u001b[3mSEE\u001b[23m\u001b[0m \u001b[1mALSO\u001b[0m\u001b[m\r\n       \u001b[1msyscalls\u001b[0m(2), \u001b[1mfeature_test_macros\u001b[0m(7), \u001b[1mman-pages\u001b[0m(7), \u001b[1mstandards\u001b[0m(7)\u001b[m\r\n\u001b[m\r\n\u001b[1mCOLOPHON\u001b[0m\u001b[m\r\n       This  page  is  part of release 3.53 of the Linux \u001b[4mman-pages\u001b[24m project.  A description of\u001b[m\r\n       the   project,   and   information   about   reporting   bugs,   can   be   found   at\u001b[m\r\n       http://www.kernel.org/doc/man-pages/.\u001b[m\r\n\u001b[m\r\nLinux                                     2012-08-05                                  LIBC(7)\u001b[m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[1m~\u001b[0m\r\n\u001b[3m Manual page libc(7) line 50/60 (END) (press h for help or q to quit)\u001b[23m\u001b[K"]
[38.986078, "o", "\r\u001b[K\u001b[?1l\u001b>\u001b[?1049l\u001bkroot@localhost:~\u001b\\[root@localhost ~]# "]
[40.592283, "o", "m"]
[40.729784, "o", "a"]
[40.856113, "o", "n"]
[41.037951, "o", " "]
[41.164125, "o", "i"]
[41.235022, "o", "n"]
[41.492236, "o", "t"]
[41.686838, "o", "r"]
[41.751077, "o", "o"]
[42.141909, "o", "\r\n"]
[42.191404, "o", "\u001b[?1049h\u001b[?1h\u001b=\r"]
[42.223282, "o", "INTRO(1)                             Linux User's Manual                             INTRO(1)\u001b[m\r\n\u001b[m\r\n\u001b[1mNAME\u001b[0m\u001b[m\r\n       intro - introduction to user commands\u001b[m\r\n\u001b[m\r\n\u001b[1mDESCRIPTION\u001b[0m\u001b[m\r\n       Section 1 of the manual describes user commands and tools, for example, file manipula‐\u001b[m\r\n       tion tools, shells, compilers, web browsers, file and image viewers and  editors,  and\u001b[m\r\n       so on.\u001b[m\r\n\u001b[m\r\n       All  commands yield a status value on termination.  This value can be tested (e.g., in\u001b[m\r\n       most shells the variable \u001b[4m$?\u001b[24m  contains the status of the last executed command) to  see\u001b[m\r\n       whether the command completed successfully.  A zero exit status is conventionally used\u001b[m\r\n       to indicate success, and a nonzero status means that  the  command  was  unsuccessful.\u001b[m\r\n       (Details of the exit status can be found in \u001b[1mwait\u001b[0m(2).)  A nonzero exit status can be in\u001b[m\r\n       the range 1 to 255, and some commands use different nonzero status values to  indicate\u001b[m\r\n"]
[42.223358, "o", "       the reason why the command failed.\u001b[m\r\n\u001b[m\r\n\u001b[1mNOTES\u001b[0m\u001b[m\r\n       Linux  is  a flavor of UNIX, and as a first approximation all user commands under UNIX\u001b[m\r\n       work precisely the same under Linux (and FreeBSD and lots of other UNIX-like systems).\u001b[m\r\n\u001b[m\r\n       Under Linux there are GUIs (graphical user interfaces), where you can point and  click\u001b[m\r\n       and  drag,  and  hopefully  get work done without first reading lots of documentation.\u001b[m\r\n       The traditional UNIX environment is a CLI (command line  interface),  where  you  type\u001b[m\r\n       commands  to  tell  the  computer  what  to do.  That is faster and more powerful, but\u001b[m\r\n       requires finding out what the commands are.  Below a bare minimum, to get started.\u001b[m\r\n\u001b[3m Manual page intro(1) line 1 (press h for help or q to quit)\u001b[23m\u001b[K"]
[47.33295, "o", "\r\u001b[K\u001b[m\r\n\u001b[3m Manual page intro(1) line 2 (press h for help or q to quit)\u001b[23m\u001b[K"]
[47.875351, "o", "\r\u001b[K   \u001b[1mLogin\u001b[0m\u001b[m\r\n\u001b[3m Manual page intro(1) line 5 (press h for help or q to quit)\u001b[23m\u001b[K"]
[47.903833, "o", "\r\u001b[K       In order to start working, you probably first have to login, that is, give your  user‐\u001b[m\r\n\u001b[3m Manual page intro(1) line 6 (press h for help or q to quit)\u001b[23m\u001b[K"]
[47.93878, "o", "\r\u001b[K       name  and password.  See also \u001b[1mlogin\u001b[0m(1).  The program \u001b[4mlogin\u001b[24m now starts a \u001b[4mshell\u001b[24m (command\u001b[m\r\n\u001b[3m Manual page intro(1) line 7 (press h for help or q to quit)\u001b[23m\u001b[K"]
[47.976619, "o", "\r\u001b[K       interpreter) for you.  In case of a graphical login, you get a screen  with  menus  or\u001b[m\r\n\u001b[3m Manual page intro(1) line 8 (press h for help or q to quit)\u001b[23m\u001b[K"]
[48.623134, "o", "\r\u001b[K       icons and a mouse click will start a shell in a window.  See also \u001b[1mxterm\u001b[0m(1).\u001b[m\r\n\u001b[3m Manual page intro(1) line 9 (press h for help or q to quit)\u001b[23m\u001b[K"]
[49.022684, "o", "\r\u001b[K\u001b[m\r\n\u001b[3m Manual page intro(1) line 10 (press h for help or q to quit)\u001b[23m\u001b[K"]
[49.246114, "o", "\r\u001b[K   \u001b[1mThe\u001b[0m \u001b[1mshell\u001b[0m\u001b[m\r\n\u001b[3m Manual page intro(1) line 11 (press h for help or q to quit)\u001b[23m\u001b[K"]
[49.47989, "o", "\r\u001b[K       One  types commands to the \u001b[4mshell\u001b[24m, the command interpreter.  It is not built-in, but is\u001b[m\r\n\u001b[3m Manual page intro(1) line 12 (press h for help or q to quit)\u001b[23m\u001b[K"]
[49.678711, "o", "\r\u001b[K       just a program and you can change your shell.  Everybody has  her  own  favorite  one.\u001b[m\r\n\u001b[3m Manual page intro(1) line 13 (press h for help or q to quit)\u001b[23m\u001b[K"]
[49.878152, "o", "\r\u001b[K       The standard one is called \u001b[4msh\u001b[24m.  See also \u001b[1mash\u001b[0m(1), \u001b[1mbash\u001b[0m(1), \u001b[1mcsh\u001b[0m(1), \u001b[1mzsh\u001b[0m(1), \u001b[1mchsh\u001b[0m(1).\u001b[m\r\n\u001b[3m Manual page intro(1) line 14 (press h for help or q to quit)\u001b[23m\u001b[K"]
[50.09348, "o", "\r\u001b[K\u001b[m\r\n\u001b[3m Manual page intro(1) line 15 (press h for help or q to quit)\u001b[23m\u001b[K"]
[50.327783, "o", "\r\u001b[K       A session might go like\u001b[m\r\n\u001b[3m Manual page intro(1) line 16 (press h for help or q to quit)\u001b[23m\u001b[K"]
[51.821863, "o", "\r\u001b[K\u001b[m\r\n\u001b[3m Manual page intro(1) line 17 (press h for help or q to quit)\u001b[23m\u001b[K"]
[52.042826, "o", "\r\u001b[K              \u001b[1mknuth\u001b[0m \u001b[1mlogin:\u001b[0m \u001b[4maeb\u001b[24m\u001b[m\r\n\u001b[3m Manual page intro(1) line 18 (press h for help or q to quit)\u001b[23m\u001b[K"]
[52.258371, "o", "\r\u001b[K              \u001b[1mPassword:\u001b[0m \u001b[4m********\u001b[24m\u001b[m\r\n\u001b[3m Manual page intro(1) line 19 (press h for help or q to quit)\u001b[23m\u001b[K"]
[52.457195, "o", "\r\u001b[K              \u001b[1m%\u001b[0m \u001b[4mdate\u001b[24m\u001b[m\r\n\u001b[3m Manual page intro(1) line 20 (press h for help or q to quit)\u001b[23m\u001b[K"]
[52.717034, "o", "\r\u001b[K              Tue Aug  6 23:50:44 CEST 2002\u001b[m\r\n\u001b[3m Manual page intro(1) line 21 (press h for help or q to quit)\u001b[23m\u001b[K"]
[52.961952, "o", "\r\u001b[K              \u001b[1m%\u001b[0m \u001b[4mcal\u001b[24m\u001b[m\r\n\u001b[3m Manual page intro(1) line 22 (press h for help or q to quit)\u001b[23m\u001b[K"]
[53.196791, "o", "\r\u001b[K                   August 2002\u001b[m\r\n\u001b[3m Manual page intro(1) line 23 (press h for help or q to quit)\u001b[23m\u001b[K"]
[54.221648, "o", "\r\u001b[K\u001b[?1l\u001b>\u001b[?1049l\u001bkroot@localhost:~\u001b\\[root@localhost ~]# "]
[57.690657, "o", "exit\r\n"]
